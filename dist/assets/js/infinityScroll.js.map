{"version":3,"file":"infinityScroll.js","sources":["infinityScroll.js"],"sourcesContent":["// let currentPage = 1;\r\n// let isFetching = false;\r\n// let hasMore = true;\r\n// let lastImage;\r\n// const root = document.querySelector('.fb_body');\r\n\r\n// async function fetchData() {\r\n//     if (isFetching || !hasMore) return;\r\n\r\n//     isFetching = true;\r\n//     try {\r\n//         const response = await fetch(`https://picsum.photos/v2/list?page=${currentPage}&limit=10`);\r\n//         const data = await response.json();\r\n//         console.log(data);\r\n\r\n//         if (data.length === 0) {\r\n//             hasMore = false;\r\n//             return;\r\n//         }\r\n//         data.forEach(image => {\r\n//             const div = document.createElement('div');\r\n//             div.classList.add(\"add_post_scrolling\");\r\n//             div.innerHTML = `\r\n//             <div class=\"post_col\">\r\n//                 <div class=\"post_row\">\r\n//                     <div class=\"user_profile\">\r\n//                         <img src=\"assets/images/5.jpg\" alt=\"Profile Picture\">\r\n//                         <div>\r\n//                             <p class=\"userName\">Sajeda Jomaa</p>\r\n//                             <small class=\"date\">${new Date().toLocaleString()}<small>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//                 <p class=\"postContent\">Lorem ipsum dolor sit amet consectetur,</p>\r\n//                 <div class=\"post_image_container\">\r\n//                     <img class=\"post_img\" src=\"${image.download_url}\" alt=\"Post Image\">\r\n//                 </div>\r\n//                 <div class=\"post_row\">\r\n//                     <div class=\"activity_icon\">\r\n//                         <div><img src=\"assets/images/like-blue.png\" alt=\"Like\">290</div>\r\n//                         <div><img src=\"assets/images/comments.png\" alt=\"Comments\">98</div>\r\n//                         <div><img src=\"assets/images/share.png\" alt=\"Share\">9834</div>\r\n//                     </div>\r\n//                     <div class=\"post_profile_icon\">\r\n//                         <img src=\"assets/images/5.jpg\" alt=\"Profile Pic\"> <i class=\"fa fa-caret-down\"></i>\r\n//                     </div>\r\n//                 </div></div>`;\r\n//             // if (window.location.href === 'http://localhost:8000/userProfile.html') {\r\n\r\n//             // document.body.querySelector('.post_col').appendChild(div);\r\n\r\n//             // } else {\r\n//             root.appendChild(div);\r\n//             // }\r\n//         });\r\n//         if (window.location.href === 'http://localhost:8000/userProfile.html') {\r\n//             lastImage = document.body.querySelector('.post_col').lastElementChild;\r\n//             currentPage++;\r\n//             observeLastImage();\r\n\r\n//         } else {\r\n//             lastImage = root.lastElementChild;\r\n//             currentPage++;\r\n//             observeLastImage();\r\n//         }\r\n\r\n//     } catch (error) {\r\n//         console.error('Error fetching data:', error);\r\n//     } finally {\r\n//         isFetching = false;\r\n//     }\r\n// }\r\n\r\n// function observeLastImage() {\r\n//     const observer = new IntersectionObserver((entries) => {\r\n//         if (entries[0].isIntersecting && !isFetching && hasMore) {\r\n//             observer.unobserve(lastImage);\r\n//             fetchData();\r\n//         }\r\n//     }, { threshold: 0.01 });\r\n\r\n//     if (lastImage) {\r\n//         observer.observe(lastImage);\r\n//     }\r\n// }\r\n\r\n// function downloadImage(url, filename) {\r\n//     fetch(url)\r\n//         .then(response => response.blob())\r\n//         .then(blob => {\r\n//             const a = document.createElement('a');\r\n//             a.href = URL.createObjectURL(blob);\r\n//             a.download = filename;\r\n//             document.body.appendChild(a);\r\n//             a.click();\r\n//             document.body.removeChild(a);\r\n//         })\r\n//         .catch(error => console.error('Download failed:', error));\r\n// }\r\n\r\n// fetchData();\r\n\r\nlet currentPage = 1;\r\nlet isFetching = false;\r\nlet hasMore = true;\r\nlet lastImage;\r\nconst root = document.querySelector('.fb_body');\r\n\r\nasync function fetchData() {\r\n    if (isFetching || !hasMore) return;\r\n\r\n    isFetching = true;\r\n    try {\r\n        const response = await fetch(`https://picsum.photos/v2/list?page=${currentPage}&limit=10`);\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log(data);\r\n\r\n        if (data.length === 0) {\r\n            hasMore = false;\r\n            return;\r\n        }\r\n\r\n        data.forEach(image => {\r\n            const div = document.createElement('div');\r\n            div.classList.add(\"add_post_scrolling\");\r\n            div.innerHTML = `\r\n                <div class=\"post_col\">\r\n                    <div class=\"post_row\">\r\n                        <div class=\"user_profile\">\r\n                            <img src=\"assets/images/5.jpg\" alt=\"Profile Picture\">\r\n                            <div>\r\n                                <p class=\"userName\">Sajeda Jomaa</p>\r\n                                <small class=\"date\">${new Date().toLocaleString()}<small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <p class=\"postContent\">Lorem ipsum dolor sit amet consectetur,</p>\r\n                    <div class=\"post_image_container\">\r\n                        <img class=\"post_img\" src=\"${image.download_url}\" alt=\"Post Image\">\r\n                    </div>\r\n                    <div class=\"post_row\">\r\n                        <div class=\"activity_icon\">\r\n                            <div><img src=\"assets/images/like-blue.png\" alt=\"Like\">290</div>\r\n                            <div><img src=\"assets/images/comments.png\" alt=\"Comments\">98</div>\r\n                            <div><img src=\"assets/images/share.png\" alt=\"Share\">9834</div>\r\n                        </div>\r\n                        <div class=\"post_profile_icon\">\r\n                            <img src=\"assets/images/5.jpg\" alt=\"Profile Pic\"> <i class=\"fa fa-caret-down\"></i>\r\n                        </div>\r\n                    </div>\r\n                </div>`;\r\n            root.appendChild(div);\r\n        });\r\n\r\n        lastImage = root.lastElementChild;\r\n        currentPage++;\r\n        observeLastImage();\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n    } finally {\r\n        isFetching = false;\r\n    }\r\n}\r\n\r\nfunction observeLastImage() {\r\n    const observer = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting && !isFetching && hasMore) {\r\n            observer.unobserve(lastImage);\r\n            fetchData();\r\n        }\r\n    }, { threshold: 0.01 });\r\n\r\n    if (lastImage) {\r\n        observer.observe(lastImage);\r\n    }\r\n}\r\n\r\nfunction downloadImage(url, filename) {\r\n    fetch(url)\r\n        .then(response => response.blob())\r\n        .then(blob => {\r\n            const a = document.createElement('a');\r\n            a.href = URL.createObjectURL(blob);\r\n            a.download = filename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        })\r\n        .catch(error => console.error('Download failed:', error));\r\n}\r\n\r\nfetchData();\r\n"],"names":["let","currentPage","isFetching","hasMore","lastImage","root","document","querySelector","async","fetchData","response","await","fetch","ok","Error","status","data","json","console","log","length","forEach","image","div","createElement","classList","add","innerHTML","Date","toLocaleString","download_url","appendChild","lastElementChild","observeLastImage","error","observer","IntersectionObserver","entries","isIntersecting","unobserve","threshold","observe","downloadImage","url","filename","then","blob","a","href","URL","createObjectURL","download","body","click","removeChild","catch"],"mappings":"AAsGAA,IAAIC,YAAc,EACdC,WAAa,CAAA,EACbC,QAAU,CAAA,EACVC,UACJ,MAAMC,KAAOC,SAASC,cAAc,UAAU,EAE9CC,eAAeC,YACX,GAAIP,CAAAA,YAAeC,QAAnB,CAEAD,WAAa,CAAA,EACb,IACI,IAAMQ,EAAWC,MAAMC,4CAA4CX,sBAAsB,EACzF,GAAI,CAACS,EAASG,GACV,MAAM,IAAIC,MAAM,uBAAuBJ,EAASK,MAAQ,EAG5D,IAAMC,EAAOL,MAAMD,EAASO,KAAK,EACjCC,QAAQC,IAAIH,CAAI,EAEI,IAAhBA,EAAKI,OACLjB,QAAU,CAAA,GAIda,EAAKK,QAAQC,IACT,IAAMC,EAAMjB,SAASkB,cAAc,KAAK,EACxCD,EAAIE,UAAUC,IAAI,oBAAoB,EACtCH,EAAII;;;;;;;uDAOsC,IAAIC,MAAOC,eAAe;;;;;;qDAM3BP,EAAMQ;;;;;;;;;;;;wBAa/CzB,KAAK0B,YAAYR,CAAG,CACxB,CAAC,EAEDnB,UAAYC,KAAK2B,iBACjB/B,WAAW,GACXgC,iBAAiB,EAMrB,CAJE,MAAOC,GACLhB,QAAQgB,MAAM,uBAAwBA,CAAK,CAC/C,CAAE,QACEhC,WAAa,CAAA,CACjB,CAzDkC,CA0DtC,CAEA,SAAS+B,mBACL,MAAME,EAAW,IAAIC,qBAAqB,IAClCC,EAAQ,GAAGC,gBAAkB,CAACpC,YAAcC,UAC5CgC,EAASI,UAAUnC,SAAS,EAC5BK,UAAU,EAElB,EAAG,CAAE+B,UAAW,GAAK,CAAC,EAElBpC,WACA+B,EAASM,QAAQrC,SAAS,CAElC,CAEA,SAASsC,cAAcC,EAAKC,GACxBhC,MAAM+B,CAAG,EACJE,KAAKnC,GAAYA,EAASoC,KAAK,CAAC,EAChCD,KAAKC,IACF,IAAMC,EAAIzC,SAASkB,cAAc,GAAG,EACpCuB,EAAEC,KAAOC,IAAIC,gBAAgBJ,CAAI,EACjCC,EAAEI,SAAWP,EACbtC,SAAS8C,KAAKrB,YAAYgB,CAAC,EAC3BA,EAAEM,MAAM,EACR/C,SAAS8C,KAAKE,YAAYP,CAAC,CAC/B,CAAC,EACAQ,MAAMrB,GAAShB,QAAQgB,MAAM,mBAAoBA,CAAK,CAAC,CAChE,CAEAzB,UAAU"}